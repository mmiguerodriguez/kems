<!-- $Id: build.xml,v 1.1 2009-04-05 18:51:00 adolfo Exp $ -->

<project default="usage" basedir=".">

   <!-- set global properties for this build -->
  <property environment="env"/>
  <property name="KEMS_HOME.dir" value="${env.KEMS_HOME}"/>
  <property name="problems.basedir" value="${KEMS_HOME.dir}/problems"/>
  <property name="problems.input.dir" value="${problems.basedir}/input"/>
  <property name="problems.output.dir" value="${problems.basedir}/output"/>

  <property name="analysers.basedir" value="${KEMS_HOME.dir}/kems.bin/exec/analysers"/>
  <property name="analysers.input.dir" value="${KEMS_HOME.dir}/kems.bin/exec/analysers/input"/>
  <property name="analysers.output.dir" value="${analysers.basedir}/output"/>


  <property name="lib.dir" value="${KEMS_HOME.dir}/kems.bin/lib"/>
  <property name="ext.lib.dir" value="${KEMS_HOME.dir}/kems.ext.lib/ext"/>
  <property name="jflex.jar" value="${ext.lib.dir}/JFlex.jar"/>
  <property name="cup.jar" value="${ext.lib.dir}/java_cup.jar"/>
  <property name="logicJarName" value="logic-new"/>
  <property name="logic.jar" value="${lib.dir}/${logicJarName}.jar"/>
  <property name="output.jars.dir" value="${KEMS_HOME.dir}/kems.bin/exec/analysers/output.jars"/>

  <!-- =================================================================== -->
  <!-- Generates a lexer with JFlex                                                                  -->
  <!-- =================================================================== -->
  <target name="jflex" description="generates a lexer with JFlex">
     <!-- input: lexer.name analyser.dir-->
         <java jar="${jflex.jar}" fork="true">
         <arg value="-d"/>
         <arg value="${analysers.output.dir}/${analyser.dir}"/>
         <arg value="${analysers.input.dir}/${analyser.dir}/${lexer.name}"/>
       </java>
  </target>

  <!-- =================================================================== -->
  <!-- Generates a parser with CUP                                                                   -->
  <!-- =================================================================== -->
  <target name="cup" description="generates a parser with CUP">
     <!-- input: analyser.dir parser.name symbols.name cup.file.name-->
         <java jar="${cup.jar}" fork="true" dir="${analysers.output.dir}/${analyser.dir}">
    <arg value="-parser"/>
    <arg value="${parser.name}"/>
    <arg value="-symbols"/>
    <arg value="${symbols.name}"/>
    <arg value="${analysers.input.dir}/${analyser.dir}/${cup.file.name}"/>
       </java>
  </target>

  <!-- =================================================================== -->
  <!-- Compiles files generated by JFlex and CUP                           -->
  <!-- =================================================================== -->
  <target name="compile" description="compiles files generated by JFlex and CUP">
     <!-- input: analyser.dir analyser.files -->

     <!-- Compilation class path -->
     <path id="compile.class.path">
       <pathelement location="${cup.jar}"/>
       <pathelement location="${logic.jar}"/>
     </path>

	<echo message="Libraries used:"/>
	<echo message="${cup.jar}"/>
	<echo message="${logic.jar}"/>

         <javac srcdir="${analysers.input.dir}/${analyser.dir}"
                    includes="${analyser.files}*.java"
               destdir="${analysers.output.dir}/${analyser.dir}">
       <classpath refid="compile.class.path"/>
  </javac>
         <javac srcdir="${analysers.output.dir}/${analyser.dir}"
                    includes="${analyser.files}*.java"
               destdir="${analysers.output.dir}/${analyser.dir}">
       <classpath refid="compile.class.path"/>
       </javac>

  </target>


  <!-- =================================================================== -->
  <!-- Generates a jar file from files generated by JFlex and CUP          -->
  <!-- =================================================================== -->
  <target name="makejar" description="generates a jar from files generated by JFlex and CUP">
     <!-- input: analyser.dir analyser.files jar.file package.name -->
   <jar jarfile="${analysers.output.dir}/${analyser.dir}/${jar.file}">
        <fileset dir="${analysers.output.dir}/${analyser.dir}/"
        includes="${analyser.files}/*${analyser.files}*.class"/>
    </jar>
   <move file="${analysers.output.dir}/${analyser.dir}/${jar.file}"
    todir="${output.jars.dir}">
   </move>
  	<!--
    <echo message="delete ${analysers.output.dir}/${jar.file}"/>
    <delete dir="${analysers.basedir}"/>
   -->
  </target>

  <!-- =================================================================== -->
  <!-- Help on usage                                                       -->
  <!-- =================================================================== -->
  <target name="usage" description="usage">
    <echo message=""/>
    <echo message=""/>
    <echo message="KEMS Build file"/>
    <echo message="-------------------------------------------------------------"/>
    <echo message=""/>
    <echo message=" available targets are:"/>
    <echo message="   jflex    --> Ex.: ./build.sh jflex -Danalyser.dir=dir -Dlexer.name=file.flex"/>
    <echo message="   cup      --> ./build.sh  cup -Danalyser.dir=dir -Dparser.name=ParserName -Dsymbols.name=ParserNamesym -Dcup.file.name=file.cup"/>
    <echo message="   compile  --> ./build.sh -Danalyser.dir=dir -Danalyser.files=ParserName"/>
    <echo message="   makejar  --> ./build.sh makejar -Danalyser.dir=dir -Djar.file=jarName.jar -Danalyser.files=ParserName"/>
    <echo message="   clean  --> ./build.sh clean"/>
    <echo message=""/>
    <echo message=" See the comments inside the build.xml file for more details."/>
    <echo message="-------------------------------------------------------------"/>
    <echo message=""/>
    <echo message=""/>
  </target>


  <!-- =================================================================== -->
  <!-- Clean out the output directories                                                       																			-->
  <!-- =================================================================== -->
  <target name="clean" description="Clean out the output directories">
  <!--	
	<delete dir="${analysers.output.dir}"/>
  	<delete dir="${problems.output.dir}"/>
 -->
  </target>
 

</project>
